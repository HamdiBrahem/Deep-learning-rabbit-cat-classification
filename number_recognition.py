# -*- coding: utf-8 -*-
"""Number recognition.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Qyi3g1kEes4xPnCDg7Av2qWsBpQ68e8w
"""

import numpy as np
import matplotlib.pyplot as plt
from keras.datasets import mnist
from keras.utils import to_categorical
from keras.models import Sequential
from keras.layers import Dense,Dropout
from keras.optimizers import Adam

(X_train,y_train),(X_test,y_test)=mnist.load_data()
X_train=X_train.astype('float32')/255
X_test=X_test.astype('float32')/255
y_train=to_categorical(y_train,10)
y_test=to_categorical(y_test,10)
#Afficher quelques images du jeu de données
plt.figure(figsize=(10,4))
for i in range(10):
  plt.subplot(2,5,i+1)
  plt.imshow(X_train[i],cmap='gray')
  plt.title("Label: {}".format(np.argmax(y_train[i])))
  plt.axis('off')
plt.show()

model=Sequential()
model.add(Dense(128,input_shape=(784,),activation='relu'))
model.add(Dropout(0.2))
model.add(Dense(64,activation='relu'))
model.add(Dropout(0.2))
model.add(Dense(10,activation='softmax'))
model.compile(loss='categorical_crossentropy',optimizer=Adam(learning_rate=0.001),metrics=['accuracy'])

X_train_flat=X_train.reshape((X_train.shape[0],-1))
X_test_flat=X_test.reshape((X_test.shape[0],-1))
history=model.fit(X_train_flat,y_train,validation_data=(X_test_flat,y_test),epochs=20,batch_size=200,verbose=2)

loss,accuracy=model.evaluate(X_test_flat,y_test,verbose=0)
print("Precision sur l'ensemble de test: {:.2f}%".format(accuracy*100))

image_index=0
plt.imshow(X_test[image_index],cmap='gray')
image=X_test_flat[image_index].reshape(1,-1)
prediction=model.predict(image)
print("Prédiction du modèle : Classe {}".format(np.argmax(prediction)))